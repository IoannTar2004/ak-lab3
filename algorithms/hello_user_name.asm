transfer:
    store *2        ; сохраняю передаваемый байт в ячейку 2
    load 0
    sign 3          ; CS = 0

    load 8          ; счётчик переданных битов
    char:           ; цикл для передачи и получения данных от slave путем подачи тактовых импульсов командой clk на порт 0.
        store *3
        load *2
        clk 0
        store *2
        load *3
        dec
        cmp 0
        jne char

    load *2         ; если приходит 0 со slave, значит все введенные символы переданы, и их больше не нужно сохранять в память
    cmp 0
    je skip
    store **1+

    skip: load 1
    sign 3  ;CS = 1
    iret

enter_hello:
    load 'H'
    store *4

    load 'e'
    store *5

    load 'l'
    store *6

    load 'l'
    store *7

    load 'o'
    store *8

    load ','
    store *9

    load ' '
    store *10

    ret

_start:
    call enter_hello    ; сохраняем строку Hello,
    int transfer        ; устанавливаю функцию transfer как обработчик прерывания
    timer 9             ; установка таймера с задержкой в 9 тактов

    in 1                ; порт 1 (MISO) устанавливаю на прием данных
    out 2               ; порт 2 (MOSI) устанавливаю на передачу данных
    out 3               ; порт 3 (CS) устанавливаю на вывод сигнала
    load 1
    sign 3              ; устанавливаю cs в 1

    ei                  ; разрешаю прерывания (включаю таймер прерываний)
    load 4
    store *0            ; сохраняю указатель на текущий символ вывода
    load 11
    store *1            ; сохраняю указатель на первый введенный символ

    loop:
        load **0+       ; загружаю каждый символ из строки
        cmp 0           ; пока не пришел 0-терминатор считываю данные с spi, затем добавляю этот символ в буфер вывода и выхожу из программы
        jne loop
    end: halt