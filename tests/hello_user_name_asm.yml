input: Ivan Tarasov

source: |
  transfer:
    out 2           ; загрузка старшего бита аккумулятора в буфер вывода
    sign 0          ; сдвиг влево на 1 бит аккумулятора и регистра данных в slave, если sclk = 1
    in 1            ; загрузка бита из буфера ввода в младший бит аккумулятора
    store *3        ; сохранение результата передачи
    iret

  print:
    movh                ; смещаю младший байт [7:0] в старший байт [31:24]
    store *3            ; сохраняю передаваемый байт в ячейку 2
    load 16             ; счётчик прерываний для передачи 8-ми битов
    store *4

    sign 3              ; CS = 0
    ei
    char:
        load *3         ; загружаю передаваемый символ. После этой инструкции по таймеру происходит прерывание
        load *4
        dec             ; декремент счетчика
        store *4
        jne char
    di
    sign 3              ; CS = 1
    load *3
    cmp 0               ; если приходит 0 со slave, значит все введенные символы переданы, и их больше не нужно сохранять в память
    je skip
    store **2+

    skip: ret

  enter_hello:
    load 'H'
    store *5

    load 'e'
    store *6

    load 'l'
    store *7

    load 'l'
    store *8

    load 'o'
    store *9

    load ','
    store *10

    load ' '
    store *11

    ret

  _start:
    vec                 ; вектор прерывания - 0 (в аккумуляторе изначально значение 0)
    func transfer       ; устанавливаю функцию transfer как обработчик прерывания
    store *0
    timer 7             ; установка таймера с задержкой в 7 тактов
    sign 3

    call enter_hello    ; сохраняю строку Hello,

    load 5
    store *1            ; сохраняю указатель на текущий символ вывода
    load 12
    store *2            ; сохраняю указатель на первый введенный символ

    load **1+
    loop:
        call print
        load **1+       ; загружаю каждый символ из строки
        cmp 0           ; пока не закончились символы, считываю данные с spi, затем добавляю этот символ в буфер вывода
        jne loop
    call print          ; передаю 0-терминатор в буфер
    end: halt

machine_code: |-
  [{"_start": 38},
   {"index": 0, "opcode": "out", "arg": 2},
   {"index": 1, "opcode": "sign", "arg": 0},
   {"index": 2, "opcode": "in", "arg": 1},
   {"index": 3, "opcode": "store", "arg": "*3"},
   {"index": 4, "opcode": "iret"},
   {"index": 5, "opcode": "movh"},
   {"index": 6, "opcode": "store", "arg": "*3"},
   {"index": 7, "opcode": "load", "arg": 16},
   {"index": 8, "opcode": "store", "arg": "*4"},
   {"index": 9, "opcode": "sign", "arg": 3},
   {"index": 10, "opcode": "ei"},
   {"index": 11, "opcode": "load", "arg": "*3"},
   {"index": 12, "opcode": "load", "arg": "*4"},
   {"index": 13, "opcode": "dec"},
   {"index": 14, "opcode": "store", "arg": "*4"},
   {"index": 15, "opcode": "jne", "arg": 11},
   {"index": 16, "opcode": "di"},
   {"index": 17, "opcode": "sign", "arg": 3},
   {"index": 18, "opcode": "load", "arg": "*3"},
   {"index": 19, "opcode": "cmp", "arg": 0},
   {"index": 20, "opcode": "je", "arg": 22},
   {"index": 21, "opcode": "store", "arg": "**2+"},
   {"index": 22, "opcode": "ret"},
   {"index": 23, "opcode": "load", "arg": 72},
   {"index": 24, "opcode": "store", "arg": "*5"},
   {"index": 25, "opcode": "load", "arg": 101},
   {"index": 26, "opcode": "store", "arg": "*6"},
   {"index": 27, "opcode": "load", "arg": 108},
   {"index": 28, "opcode": "store", "arg": "*7"},
   {"index": 29, "opcode": "load", "arg": 108},
   {"index": 30, "opcode": "store", "arg": "*8"},
   {"index": 31, "opcode": "load", "arg": 111},
   {"index": 32, "opcode": "store", "arg": "*9"},
   {"index": 33, "opcode": "load", "arg": 44},
   {"index": 34, "opcode": "store", "arg": "*10"},
   {"index": 35, "opcode": "load", "arg": 32},
   {"index": 36, "opcode": "store", "arg": "*11"},
   {"index": 37, "opcode": "ret"},
   {"index": 38, "opcode": "vec"},
   {"index": 39, "opcode": "func", "arg": 0},
   {"index": 40, "opcode": "store", "arg": "*0"},
   {"index": 41, "opcode": "timer", "arg": 7},
   {"index": 42, "opcode": "sign", "arg": 3},
   {"index": 43, "opcode": "call", "arg": 23},
   {"index": 44, "opcode": "load", "arg": 5},
   {"index": 45, "opcode": "store", "arg": "*1"},
   {"index": 46, "opcode": "load", "arg": 12},
   {"index": 47, "opcode": "store", "arg": "*2"},
   {"index": 48, "opcode": "load", "arg": "**1+"},
   {"index": 49, "opcode": "call", "arg": 5},
   {"index": 50, "opcode": "load", "arg": "**1+"},
   {"index": 51, "opcode": "cmp", "arg": 0},
   {"index": 52, "opcode": "jne", "arg": 49},
   {"index": 53, "opcode": "call", "arg": 5},
   {"index": 54, "opcode": "halt"}]

output: |
  Hello, Ivan Tarasov

  ticks_count: 8353
  instructions_count: 3555

out_processor: |
  DEBUG: [38: vec ] - TICK: 0 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [39: func 0] - TICK: 1 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [40: store *0] - TICK: 2 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [41: timer 7] - TICK: 3 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [42: sign 3] - TICK: 4 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [43: call 23] - TICK: 5 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [43: call 23] - TICK: 6 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [43: call 23] - TICK: 7 | ACC: 43 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 43 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [43: call 23] - TICK: 8 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [23: load 72] - TICK: 9 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [24: store *5] - TICK: 10 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: 5 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [25: load 101] - TICK: 11 | ACC: 101 | BUF: 0 | STACK: -1 | ADDR: 5 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [26: store *6] - TICK: 12 | ACC: 101 | BUF: 0 | STACK: -1 | ADDR: 6 | ALU_OUT: 101 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [27: load 108] - TICK: 13 | ACC: 108 | BUF: 0 | STACK: -1 | ADDR: 6 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [28: store *7] - TICK: 14 | ACC: 108 | BUF: 0 | STACK: -1 | ADDR: 7 | ALU_OUT: 108 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [29: load 108] - TICK: 15 | ACC: 108 | BUF: 0 | STACK: -1 | ADDR: 7 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [30: store *8] - TICK: 16 | ACC: 108 | BUF: 0 | STACK: -1 | ADDR: 8 | ALU_OUT: 108 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [31: load 111] - TICK: 17 | ACC: 111 | BUF: 0 | STACK: -1 | ADDR: 8 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [32: store *9] - TICK: 18 | ACC: 111 | BUF: 0 | STACK: -1 | ADDR: 9 | ALU_OUT: 111 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [33: load 44] - TICK: 19 | ACC: 44 | BUF: 0 | STACK: -1 | ADDR: 9 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [34: store *10] - TICK: 20 | ACC: 44 | BUF: 0 | STACK: -1 | ADDR: 10 | ALU_OUT: 44 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [35: load 32] - TICK: 21 | ACC: 32 | BUF: 0 | STACK: -1 | ADDR: 10 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [36: store *11] - TICK: 22 | ACC: 32 | BUF: 0 | STACK: -1 | ADDR: 11 | ALU_OUT: 32 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [37: ret ] - TICK: 23 | ACC: 32 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [37: ret ] - TICK: 24 | ACC: 32 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 43 | MEM_OUT: 43 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [37: ret ] - TICK: 25 | ACC: 32 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [44: load 5] - TICK: 26 | ACC: 5 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [45: store *1] - TICK: 27 | ACC: 5 | BUF: 0 | STACK: 0 | ADDR: 1 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [46: load 12] - TICK: 28 | ACC: 12 | BUF: 0 | STACK: 0 | ADDR: 1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [47: store *2] - TICK: 29 | ACC: 12 | BUF: 0 | STACK: 0 | ADDR: 2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [48: load **1+] - TICK: 30 | ACC: 12 | BUF: 5 | STACK: 0 | ADDR: 1 | ALU_OUT: 5 | MEM_OUT: 5 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [48: load **1+] - TICK: 31 | ACC: 12 | BUF: 5 | STACK: 0 | ADDR: 1 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [48: load **1+] - TICK: 32 | ACC: 12 | BUF: 5 | STACK: 0 | ADDR: 5 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [48: load **1+] - TICK: 33 | ACC: 72 | BUF: 5 | STACK: 0 | ADDR: 5 | ALU_OUT: 72 | MEM_OUT: 72 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [49: call 5] - TICK: 34 | ACC: 72 | BUF: 5 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [49: call 5] - TICK: 35 | ACC: 72 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [49: call 5] - TICK: 36 | ACC: 49 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 49 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [49: call 5] - TICK: 37 | ACC: 72 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [5: movh ] - TICK: 38 | ACC: 1207959552 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 1207959552 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [6: store *3] - TICK: 39 | ACC: 1207959552 | BUF: 72 | STACK: -1 | ADDR: 3 | ALU_OUT: 1207959552 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [7: load 16] - TICK: 40 | ACC: 16 | BUF: 72 | STACK: -1 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [8: store *4] - TICK: 41 | ACC: 16 | BUF: 72 | STACK: -1 | ADDR: 4 | ALU_OUT: 16 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [9: sign 3] - TICK: 42 | ACC: 16 | BUF: 72 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [10: ei ] - TICK: 43 | ACC: 16 | BUF: 72 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 44 | ACC: 1207959552 | BUF: 72 | STACK: -1 | ADDR: 3 | ALU_OUT: 1207959552 | MEM_OUT: 1207959552 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 45 | ACC: 1207959552 | BUF: 72 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 46 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: 1207959552 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 47 | ACC: 12 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 48 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: 1207959552 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 49 | ACC: 1207959552 | BUF: 1207959552 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 50 | ACC: 1207959552 | BUF: 1207959552 | STACK: -3 | ADDR: -3 | ALU_OUT: 1207959552 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 51 | ACC: 1207959552 | BUF: 1207959552 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 52 | ACC: 1207959552 | BUF: 1207959552 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 53 | ACC: 2415919104 | BUF: 1207959552 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 54 | ACC: 2415919104 | BUF: 1207959552 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 55 | ACC: 2415919104 | BUF: 1207959552 | STACK: -3 | ADDR: 3 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 56 | ACC: 2415919104 | BUF: 1207959552 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 57 | ACC: 1207959552 | BUF: 1207959552 | STACK: -3 | ADDR: -3 | ALU_OUT: 1207959552 | MEM_OUT: 1207959552 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 58 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 59 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 60 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 61 | ACC: 1207959552 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 62 | ACC: 1207959552 | BUF: 1207959552 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 63 | ACC: 16 | BUF: 1207959552 | STACK: -1 | ADDR: 4 | ALU_OUT: 16 | MEM_OUT: 16 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 64 | ACC: 15 | BUF: 1207959552 | STACK: -1 | ADDR: 4 | ALU_OUT: 15 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 65 | ACC: 15 | BUF: 1207959552 | STACK: -1 | ADDR: 4 | ALU_OUT: 15 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 66 | ACC: 15 | BUF: 1207959552 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 67 | ACC: 15 | BUF: 1207959552 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 68 | ACC: 2415919104 | BUF: 1207959552 | STACK: -1 | ADDR: 3 | ALU_OUT: 2415919104 | MEM_OUT: 2415919104 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 69 | ACC: 2415919104 | BUF: 1207959552 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 70 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 71 | ACC: 12 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 72 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 73 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 74 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 75 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 76 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 77 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 78 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 79 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 3 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 80 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 81 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: 2415919104 | MEM_OUT: 2415919104 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 82 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 83 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 84 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 85 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 86 | ACC: 2415919104 | BUF: 2415919104 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 87 | ACC: 15 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 15 | MEM_OUT: 15 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 88 | ACC: 14 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 14 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 89 | ACC: 14 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 14 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 90 | ACC: 14 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 91 | ACC: 14 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 92 | ACC: 2415919104 | BUF: 2415919104 | STACK: -1 | ADDR: 3 | ALU_OUT: 2415919104 | MEM_OUT: 2415919104 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 93 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 94 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 95 | ACC: 12 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 96 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 97 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 98 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: 2415919104 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 99 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 100 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 101 | ACC: 536870912 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 102 | ACC: 536870913 | BUF: 2415919104 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 103 | ACC: 536870913 | BUF: 2415919104 | STACK: -3 | ADDR: 3 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 104 | ACC: 536870913 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 105 | ACC: 2415919104 | BUF: 2415919104 | STACK: -3 | ADDR: -3 | ALU_OUT: 2415919104 | MEM_OUT: 2415919104 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 106 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 107 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 108 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 109 | ACC: 2415919104 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 110 | ACC: 2415919104 | BUF: 2415919104 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 111 | ACC: 14 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 14 | MEM_OUT: 14 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 112 | ACC: 13 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 13 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 113 | ACC: 13 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 13 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 114 | ACC: 13 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 115 | ACC: 13 | BUF: 2415919104 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 116 | ACC: 536870913 | BUF: 2415919104 | STACK: -1 | ADDR: 3 | ALU_OUT: 536870913 | MEM_OUT: 536870913 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 117 | ACC: 536870913 | BUF: 2415919104 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 118 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 119 | ACC: 12 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 120 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 121 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 122 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 123 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 124 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 125 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 126 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 127 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 3 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 128 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 129 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: 536870913 | MEM_OUT: 536870913 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 130 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 131 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 132 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 133 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 134 | ACC: 536870913 | BUF: 536870913 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 135 | ACC: 13 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 13 | MEM_OUT: 13 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 136 | ACC: 12 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 137 | ACC: 12 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 138 | ACC: 12 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 139 | ACC: 12 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 140 | ACC: 536870913 | BUF: 536870913 | STACK: -1 | ADDR: 3 | ALU_OUT: 536870913 | MEM_OUT: 536870913 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 141 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 142 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 143 | ACC: 12 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 144 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 145 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 146 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: 536870913 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 147 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 148 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 149 | ACC: 1073741826 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 150 | ACC: 1073741826 | BUF: 536870913 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 151 | ACC: 1073741826 | BUF: 536870913 | STACK: -3 | ADDR: 3 | ALU_OUT: 1073741826 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 152 | ACC: 1073741826 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 153 | ACC: 536870913 | BUF: 536870913 | STACK: -3 | ADDR: -3 | ALU_OUT: 536870913 | MEM_OUT: 536870913 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 154 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 155 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 156 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 157 | ACC: 536870913 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 158 | ACC: 536870913 | BUF: 536870913 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 159 | ACC: 12 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 160 | ACC: 11 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 11 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 161 | ACC: 11 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 11 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 162 | ACC: 11 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 163 | ACC: 11 | BUF: 536870913 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 164 | ACC: 1073741826 | BUF: 536870913 | STACK: -1 | ADDR: 3 | ALU_OUT: 1073741826 | MEM_OUT: 1073741826 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  INFO: Interruption Request!
  DEBUG: Interrupt! [11: load *3] - TICK: 165 | ACC: 1073741826 | BUF: 536870913 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 166 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -2 | ALU_OUT: 1073741826 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 167 | ACC: 12 | BUF: 1073741826 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 168 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -2 | ALU_OUT: 1073741826 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 169 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 170 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: -3 | ALU_OUT: 1073741826 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [11: load *3] - TICK: 171 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [0: out 2] - TICK: 172 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [1: sign 0] - TICK: 173 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [2: in 1] - TICK: 174 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [3: store *3] - TICK: 175 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: 3 | ALU_OUT: 1073741826 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 176 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: -3 | ALU_OUT: -3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 177 | ACC: 1073741826 | BUF: 1073741826 | STACK: -3 | ADDR: -3 | ALU_OUT: 1073741826 | MEM_OUT: 1073741826 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 178 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -3 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 179 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 180 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: Interrupt! [4: iret ] - TICK: 181 | ACC: 1073741826 | BUF: 1073741826 | STACK: -2 | ADDR: -2 | ALU_OUT: 12 | MEM_OUT: 12 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  INFO: Return from interruption!
  DEBUG: [4: iret ] - TICK: 182 | ACC: 1073741826 | BUF: 1073741826 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [12: load *4] - TICK: 183 | ACC: 11 | BUF: 1073741826 | STACK: -1 | ADDR: 4 | ALU_OUT: 11 | MEM_OUT: 11 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [13: dec ] - TICK: 184 | ACC: 10 | BUF: 1073741826 | STACK: -1 | ADDR: 4 | ALU_OUT: 10 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 185 | ACC: 10 | BUF: 1073741826 | STACK: -1 | ADDR: 4 | ALU_OUT: 10 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 186 | ACC: 10 | BUF: 1073741826 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 187 | ACC: 10 | BUF: 1073741826 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [11: load *3] - TICK: 188 | ACC: 1073741826 | BUF: 1073741826 | STACK: -1 | ADDR: 3 | ALU_OUT: 1073741826 | MEM_OUT: 1073741826 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  WARNING: 
  ... Continue! ...
  
  DEBUG: [13: dec ] - TICK: 424 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [14: store *4] - TICK: 425 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 426 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [15: jne 11] - TICK: 427 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [16: di ] - TICK: 428 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [17: sign 3] - TICK: 429 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 4 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [18: load *3] - TICK: 430 | ACC: 73 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 73 | MEM_OUT: 73 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [19: cmp 0] - TICK: 431 | ACC: 73 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 73 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [19: cmp 0] - TICK: 432 | ACC: 0 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [19: cmp 0] - TICK: 433 | ACC: 73 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 73 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [20: je 22] - TICK: 434 | ACC: 73 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  DEBUG: [20: je 22] - TICK: 435 | ACC: 73 | BUF: 73 | STACK: -1 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7
  WARNING: 
  ... Continue! ...
  
  DEBUG: [54: halt ] - TICK: 8353 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 7


out_spi: |
  DEBUG: TICK: 4 | SLAVE DR: 00000000 (0) <-> ACC: 00000000 | 00000000 (0 | 0) | PORTS: {0: 0, 1: 0, 2: 0, 3: 1}
  DEBUG: TICK: 42 | SLAVE DR: 01001001 (73) <-> ACC: 00000000 | 00010000 (0 | 16) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  INFO: Start of character transmission
  DEBUG: TICK: 52 | SLAVE DR: 01001001 (73) <-> ACC: 01001000 | 00000000 (72 | 0) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 53 | SLAVE DR: 01001001 (73) <-> ACC: 01001000 | 00000000 (72 | 0) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 53 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 54 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 76 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 77 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 78 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 100 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 101 | SLAVE DR: 10010010 (146) <-> ACC: 10010000 | 00000000 (144 | 0) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 101 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000000 (32 | 0) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 102 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 124 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 125 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 126 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 148 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 149 | SLAVE DR: 00100101 (37) <-> ACC: 00100000 | 00000001 (32 | 1) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 149 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 150 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 172 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 173 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 174 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 196 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 197 | SLAVE DR: 01001010 (74) <-> ACC: 01000000 | 00000010 (64 | 2) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 197 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 198 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 220 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 221 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 222 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 244 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 245 | SLAVE DR: 10010100 (148) <-> ACC: 10000000 | 00000100 (128 | 4) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 245 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001000 (0 | 8) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 246 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 268 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 269 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 270 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 292 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 293 | SLAVE DR: 00101001 (41) <-> ACC: 00000000 | 00001001 (0 | 9) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 293 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 294 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 316 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 317 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 318 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 340 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 341 | SLAVE DR: 01010010 (82) <-> ACC: 00000000 | 00010010 (0 | 18) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 341 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 342 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 364 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 365 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 366 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 388 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 389 | SLAVE DR: 10100100 (164) <-> ACC: 00000000 | 00100100 (0 | 36) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 389 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 01001000 (0 | 72) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 390 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 01001001 (0 | 73) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 412 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 01001001 (0 | 73) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 413 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 01001001 (0 | 73) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 414 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 01001001 (0 | 73) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 429 | SLAVE DR: 01001000 (72) <-> ACC: 00000000 | 00000000 (0 | 0) | PORTS: {0: 0, 1: 1, 2: 0, 3: 1}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'H' to output_buffer
  DEBUG: TICK: 460 | SLAVE DR: 01110110 (118) <-> ACC: 00000000 | 00010000 (0 | 16) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  INFO: Start of character transmission
  DEBUG: TICK: 470 | SLAVE DR: 01110110 (118) <-> ACC: 01100101 | 00000000 (101 | 0) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 471 | SLAVE DR: 01110110 (118) <-> ACC: 01100101 | 00000000 (101 | 0) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 471 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 472 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 494 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 495 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 496 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 518 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 519 | SLAVE DR: 11101100 (236) <-> ACC: 11001010 | 00000000 (202 | 0) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 519 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000000 (148 | 0) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 520 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 542 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 543 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 544 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 566 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 567 | SLAVE DR: 11011001 (217) <-> ACC: 10010100 | 00000001 (148 | 1) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 567 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000010 (40 | 2) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 568 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 590 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 591 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 592 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 614 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 615 | SLAVE DR: 10110011 (179) <-> ACC: 00101000 | 00000011 (40 | 3) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 615 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000110 (80 | 6) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 616 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 638 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 639 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 640 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 662 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 663 | SLAVE DR: 01100110 (102) <-> ACC: 01010000 | 00000111 (80 | 7) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 663 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 664 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 686 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 687 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 688 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 710 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 0, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 711 | SLAVE DR: 11001100 (204) <-> ACC: 10100000 | 00001110 (160 | 14) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 711 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011100 (64 | 28) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 712 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 734 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 735 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 736 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 758 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 0, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 759 | SLAVE DR: 10011001 (153) <-> ACC: 01000000 | 00011101 (64 | 29) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 759 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111010 (128 | 58) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 760 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 1, 1: 1, 2: 0, 3: 0}
  DEBUG: TICK: 782 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 783 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 784 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 806 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 0, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 807 | SLAVE DR: 00110010 (50) <-> ACC: 10000000 | 00111011 (128 | 59) | PORTS: {0: 1, 1: 1, 2: 1, 3: 0}
  DEBUG: TICK: 807 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 01110110 (0 | 118) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 808 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 01110110 (0 | 118) | PORTS: {0: 1, 1: 0, 2: 1, 3: 0}
  DEBUG: TICK: 830 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 01110110 (0 | 118) | PORTS: {0: 1, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 831 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 01110110 (0 | 118) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 832 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 01110110 (0 | 118) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  DEBUG: TICK: 847 | SLAVE DR: 01100101 (101) <-> ACC: 00000000 | 00000000 (0 | 0) | PORTS: {0: 0, 1: 0, 2: 0, 3: 1}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'e' to output_buffer
  DEBUG: TICK: 878 | SLAVE DR: 01100001 (97) <-> ACC: 00000000 | 00010000 (0 | 16) | PORTS: {0: 0, 1: 0, 2: 0, 3: 0}
  WARNING: 
  ... Continue! ...
  
  INFO: Start of character transmission
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'l' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'l' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'o' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ',' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ' ' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'I' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'v' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'a' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'n' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ' ' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'T' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'a' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'r' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'a' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 's' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'o' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'v' to output_buffer
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ' ' to output_buffer

