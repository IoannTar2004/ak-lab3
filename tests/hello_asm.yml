input: |

source: |
  transfer:
    store *2            ; сохраняю передаваемый байт в ячейку 2
    load 0
    sign 3              ; CS = 0

    load 8              ; счётчик переданных битов
    char:               ; цикл для передачи и получения данных от slave путем подачи тактовых импульсов командой clk на порт 0.
        store *3
        load *2
        clk 0
        store *2
        load *3
        dec
        cmp 0
        jne char
    load 1
    sign 3              ; CS = 1
    iret

  _start:
      in 1                ; порт 1 (MISO) устанавливаю на прием данных
      out 2               ; порт 2 (MOSI) устанавливаю на передачу данных
      out 3               ; порт 3 (CS) устанавливаю на вывод сигнала
      load 1
      sign 3              ; устанавливаю cs в 1

      int transfer        ; устанавливаю функцию transfer как обработчик прерывания
      timer 2             ; установка таймера с задержкой в 2 такта
      ei                  ; разрешаю прерывания (включаю таймер прерываний)

      load 'H'            ; перед прерыванием эти символы загружаются в аккумулятор
      load 'e'
      load 'l'
      load 'l'
      load 'o'
      load ' '

      load 'w'
      load 'o'
      load 'r'
      load 'l'
      load 'd'
      load '!'
      load 0

      halt


machine_code: |-
  [{"_start": 15},
   {"index": 0, "opcode": "store", "arg": "*2"},
   {"index": 1, "opcode": "load", "arg": 0},
   {"index": 2, "opcode": "sign", "arg": 3},
   {"index": 3, "opcode": "load", "arg": 8},
   {"index": 4, "opcode": "store", "arg": "*3"},
   {"index": 5, "opcode": "load", "arg": "*2"},
   {"index": 6, "opcode": "clk", "arg": 0},
   {"index": 7, "opcode": "store", "arg": "*2"},
   {"index": 8, "opcode": "load", "arg": "*3"},
   {"index": 9, "opcode": "dec"},
   {"index": 10, "opcode": "cmp", "arg": 0},
   {"index": 11, "opcode": "jne", "arg": 4},
   {"index": 12, "opcode": "load", "arg": 1},
   {"index": 13, "opcode": "sign", "arg": 3},
   {"index": 14, "opcode": "iret"},
   {"index": 15, "opcode": "in", "arg": 1},
   {"index": 16, "opcode": "out", "arg": 2},
   {"index": 17, "opcode": "out", "arg": 3},
   {"index": 18, "opcode": "load", "arg": 1},
   {"index": 19, "opcode": "sign", "arg": 3},
   {"index": 20, "opcode": "int", "arg": 0},
   {"index": 21, "opcode": "timer", "arg": 2},
   {"index": 22, "opcode": "ei"},
   {"index": 23, "opcode": "load", "arg": 72},
   {"index": 24, "opcode": "load", "arg": 101},
   {"index": 25, "opcode": "load", "arg": 108},
   {"index": 26, "opcode": "load", "arg": 108},
   {"index": 27, "opcode": "load", "arg": 111},
   {"index": 28, "opcode": "load", "arg": 32},
   {"index": 29, "opcode": "load", "arg": 119},
   {"index": 30, "opcode": "load", "arg": 111},
   {"index": 31, "opcode": "load", "arg": 114},
   {"index": 32, "opcode": "load", "arg": 108},
   {"index": 33, "opcode": "load", "arg": 100},
   {"index": 34, "opcode": "load", "arg": 33},
   {"index": 35, "opcode": "load", "arg": 0},
   {"index": 36, "opcode": "halt"}]

output: |
  Hello world!
  
  ticks_count: 1425
  instructions_count: 944

out_processor: |
  DEBUG: [15: in 1] - TICK: 0 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [16: out 2] - TICK: 1 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [17: out 3] - TICK: 2 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [18: load 1] - TICK: 3 | ACC: 1 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [19: sign 3] - TICK: 4 | ACC: 1 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [20: int 0] - TICK: 5 | ACC: 1 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 0
  DEBUG: [21: timer 2] - TICK: 6 | ACC: 1 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: [22: ei ] - TICK: 7 | ACC: 1 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: [23: load 72] - TICK: 8 | ACC: 72 | BUF: 0 | STACK: 0 | ADDR: 0 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  INFO: Interruption Request!
  DEBUG: Interrupt! [23: load 72] - TICK: 9 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 10 | ACC: 72 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 11 | ACC: 24 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 24 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 12 | ACC: 72 | BUF: 72 | STACK: -1 | ADDR: -1 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 13 | ACC: 72 | BUF: 72 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 14 | ACC: 72 | BUF: 72 | STACK: -2 | ADDR: -2 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [23: load 72] - TICK: 15 | ACC: 72 | BUF: 72 | STACK: -2 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [0: store *2] - TICK: 16 | ACC: 72 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 72 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [1: load 0] - TICK: 17 | ACC: 0 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [2: sign 3] - TICK: 18 | ACC: 0 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [3: load 8] - TICK: 19 | ACC: 8 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 20 | ACC: 8 | BUF: 72 | STACK: -2 | ADDR: 3 | ALU_OUT: 8 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 21 | ACC: 72 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 72 | MEM_OUT: 72 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 22 | ACC: 144 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 23 | ACC: 144 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 24 | ACC: 144 | BUF: 72 | STACK: -2 | ADDR: 2 | ALU_OUT: 144 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 25 | ACC: 8 | BUF: 72 | STACK: -2 | ADDR: 3 | ALU_OUT: 8 | MEM_OUT: 8 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 26 | ACC: 7 | BUF: 72 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 27 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 28 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 29 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 30 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 31 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 32 | ACC: 144 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 144 | MEM_OUT: 144 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 33 | ACC: 32 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 34 | ACC: 32 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 35 | ACC: 32 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 32 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 36 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 7 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 37 | ACC: 6 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 38 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 39 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 40 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 41 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 42 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 43 | ACC: 32 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 32 | MEM_OUT: 32 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 44 | ACC: 64 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 45 | ACC: 64 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 46 | ACC: 64 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 64 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 47 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 6 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 48 | ACC: 5 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 49 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 50 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 51 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 52 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 53 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 54 | ACC: 64 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 64 | MEM_OUT: 64 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 55 | ACC: 128 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 56 | ACC: 128 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 57 | ACC: 128 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 128 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 58 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 5 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 59 | ACC: 4 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 60 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 61 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 62 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 63 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 64 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 65 | ACC: 128 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 128 | MEM_OUT: 128 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 66 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 67 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 68 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 69 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 4 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 70 | ACC: 3 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 71 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 72 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 73 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 74 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 75 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 76 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 77 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 78 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 79 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 80 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 3 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 81 | ACC: 2 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 82 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 83 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 84 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 85 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 86 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 87 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 88 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 89 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 90 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 91 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 2 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 92 | ACC: 1 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 93 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 94 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 95 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 96 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 97 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 98 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 99 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 100 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 101 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 102 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 1 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 103 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 104 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 105 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 106 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 107 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [12: load 1] - TICK: 108 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [13: sign 3] - TICK: 109 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 110 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 111 | ACC: 72 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: 72 | MEM_OUT: 72 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 112 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 113 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 114 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 115 | ACC: 72 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 24 | MEM_OUT: 24 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  INFO: Return from interruption!
  DEBUG: [14: iret ] - TICK: 116 | ACC: 72 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: [24: load 101] - TICK: 117 | ACC: 101 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  INFO: Interruption Request!
  DEBUG: Interrupt! [24: load 101] - TICK: 118 | ACC: 101 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  INFO: 
  ...Transfer the symbols 'e','l','l','o',' ','w','o','r','l','d','!'...

  DEBUG: [35: load 0] - TICK: 1316 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  INFO: Interruption Request!
  DEBUG: Interrupt! [35: load 0] - TICK: 1317 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1318 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1319 | ACC: 36 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 36 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1320 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1321 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1322 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [35: load 0] - TICK: 1323 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [0: store *2] - TICK: 1324 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [1: load 0] - TICK: 1325 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [2: sign 3] - TICK: 1326 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [3: load 8] - TICK: 1327 | ACC: 8 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1328 | ACC: 8 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 8 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1329 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1330 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1331 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1332 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1333 | ACC: 8 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 8 | MEM_OUT: 8 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1334 | ACC: 7 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1335 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1336 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1337 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1338 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1339 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1340 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1341 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1342 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1343 | ACC: 0 | BUF: 7 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1344 | ACC: 7 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 7 | MEM_OUT: 7 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1345 | ACC: 6 | BUF: 7 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1346 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1347 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1348 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1349 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1350 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1351 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1352 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1353 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1354 | ACC: 0 | BUF: 6 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1355 | ACC: 6 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 6 | MEM_OUT: 6 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1356 | ACC: 5 | BUF: 6 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1357 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1358 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1359 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1360 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1361 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1362 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1363 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1364 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1365 | ACC: 0 | BUF: 5 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1366 | ACC: 5 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 5 | MEM_OUT: 5 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1367 | ACC: 4 | BUF: 5 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1368 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1369 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1370 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1371 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1372 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1373 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1374 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1375 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1376 | ACC: 0 | BUF: 4 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1377 | ACC: 4 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 4 | MEM_OUT: 4 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1378 | ACC: 3 | BUF: 4 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1379 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1380 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1381 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1382 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1383 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1384 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1385 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1386 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1387 | ACC: 0 | BUF: 3 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1388 | ACC: 3 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 3 | MEM_OUT: 3 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1389 | ACC: 2 | BUF: 3 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1390 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1391 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1392 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1393 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1394 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1395 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1396 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1397 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1398 | ACC: 0 | BUF: 2 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1399 | ACC: 2 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 2 | MEM_OUT: 2 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1400 | ACC: 1 | BUF: 2 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1401 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1402 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1403 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1404 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [4: store *3] - TICK: 1405 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [5: load *2] - TICK: 1406 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1407 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [6: clk 0] - TICK: 1408 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [7: store *2] - TICK: 1409 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [8: load *3] - TICK: 1410 | ACC: 1 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 1 | MEM_OUT: 1 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [9: dec ] - TICK: 1411 | ACC: 0 | BUF: 1 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': False, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1412 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1413 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [10: cmp 0] - TICK: 1414 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [11: jne 4] - TICK: 1415 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [12: load 1] - TICK: 1416 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [13: sign 3] - TICK: 1417 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: 3 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1418 | ACC: 1 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: -2 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1419 | ACC: 0 | BUF: 0 | STACK: -2 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1420 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -2 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1421 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -2 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1422 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: -1 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: Interrupt! [14: iret ] - TICK: 1423 | ACC: 0 | BUF: 0 | STACK: -1 | ADDR: -1 | ALU_OUT: 36 | MEM_OUT: 36 | FLAGS: {'z': True, 'n': False} | EI: False | INT_ADDRESS: 0 | TIMER: 2
  INFO: Return from interruption!
  DEBUG: [14: iret ] - TICK: 1424 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2
  DEBUG: [36: halt ] - TICK: 1425 | ACC: 0 | BUF: 0 | STACK: 0 | ADDR: -1 | ALU_OUT: 0 | MEM_OUT: 0 | FLAGS: {'z': True, 'n': False} | EI: True | INT_ADDRESS: 0 | TIMER: 2

out_spi: |
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: [], 3: []}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: []}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 10010000 (144) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 00100000 (32) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000010 (2) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000100 (4) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001001 (9) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00010010 (18) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00100100 (36) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01001000 (72) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01001000 (72) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'H' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11001010 (202) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10010100 (148) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 00101000 (40) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 01010000 (80) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001100 (12) <-> ACC: 10100000 (160) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011001 (25) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110010 (50) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01100101 (101) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01100101 (101) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '1', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'e' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11011000 (216) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10110000 (176) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 01100000 (96) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001101 (13) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011011 (27) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110110 (54) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'l' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11011000 (216) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10110000 (176) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 01100000 (96) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001101 (13) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011011 (27) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110110 (54) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'l' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11011110 (222) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10111100 (188) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 01111000 (120) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 11110000 (240) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001101 (13) <-> ACC: 11100000 (224) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011011 (27) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110111 (55) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101111 (111) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101111 (111) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '1', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'o' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000010 (2) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000100 (4) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001000 (8) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00010000 (16) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00100000 (32) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00100000 (32) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ' ' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11101110 (238) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 11011100 (220) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 10111000 (184) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000111 (7) <-> ACC: 01110000 (112) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001110 (14) <-> ACC: 11100000 (224) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011101 (29) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00111011 (59) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01110111 (119) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01110111 (119) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '1', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'w' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11011110 (222) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10111100 (188) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 01111000 (120) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 11110000 (240) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001101 (13) <-> ACC: 11100000 (224) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011011 (27) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110111 (55) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101111 (111) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101111 (111) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '1', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'o' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11100100 (228) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 11001000 (200) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 10010000 (144) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000111 (7) <-> ACC: 00100000 (32) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001110 (14) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011100 (28) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00111001 (57) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01110010 (114) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01110010 (114) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'r' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11011000 (216) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10110000 (176) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 01100000 (96) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 11000000 (192) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001101 (13) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011011 (27) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110110 (54) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01101100 (108) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'l' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 11001000 (200) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 10010000 (144) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000011 (3) <-> ACC: 00100000 (32) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000110 (6) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001100 (12) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00011001 (25) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00110010 (50) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01100100 (100) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 01100100 (100) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol 'd' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 01000010 (66) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 10000100 (132) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000001 (1) <-> ACC: 00001000 (8) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000010 (2) <-> ACC: 00010000 (16) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000100 (4) <-> ACC: 00100000 (32) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00001000 (8) <-> ACC: 01000000 (64) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00010000 (16) <-> ACC: 10000000 (128) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00100001 (33) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00100001 (33) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '1', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol '!' to output_buffer
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 0, 1: '0', 2: '1', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: Start of character transmission
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000000 (0) | PORTS: {0: 1, 1: '0', 2: '0', 3: 0} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  DEBUG: SLAVE DR: 00000000 (0) <-> ACC: 00000001 (1) | PORTS: {0: 0, 1: '0', 2: '0', 3: 1} | PORTS_CONFIG: {0: [], 1: ['in'], 2: ['out'], 3: ['out']}
  INFO: The transfer of the symbol is completed
  INFO: Added symbol ' ' to output_buffer
